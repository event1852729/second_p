private SendGCM ()
{
string BrowserAPIKey = ¡§AIzaSyBWRSIQcwwjb5uc9MiuEgxHQsgbDS4_fHw¡¨;
string message = ¡§´ú¸Õ¡¨;
string tickerText = ¡§example test GCM¡¨;
string contentTitle = ¡§content title GCM¡¨;
string postData = ¡§{ \¡¨registration_ids\¡¨: [ \¡¨¡¨ + 1 + ¡§\¡¨ ], \¡¨data\¡¨: {\¡¨tickerText\¡¨:\¡¨¡¨ + tickerText + ¡§\¡¨, \¡¨contentTitle\¡¨:\¡¨¡¨ + contentTitle +¡¨\¡¨, \¡¨message\¡¨: \¡¨¡¨ + message + ¡§\¡¨}}¡¨;
string response = SendGCMNotification(BrowserAPIKey, postData);
string reponse = response;
}
//GCM¥\¯à
private string SendGCMNotification(string apiKey, string postData, stringpostDataContentType = ¡§application/json¡¨)
{
    ServicePointManager.ServerCertificateValidationCallback += newRemoteCertificateValidationCallback(ValidateServerCertificate);
    //  MESSAGE CONTENT
    byte[] byteArray = Encoding.UTF8.GetBytes(postData);
    //  CREATE REQUEST
    HttpWebRequest Request = (HttpWebRequest)WebRequest.Create(¡§https://android.googleapis.com/gcm/send¡¨);
    Request.Method = ¡§POST¡¨;
    Request.KeepAlive = false;
    Request.ContentType = postDataContentType;
    Request.Headers.Add(string.Format(¡§Authorization: key={0}¡¨, apiKey));
    Request.ContentLength = byteArray.Length;
    Stream dataStream = Request.GetRequestStream();
    dataStream.Write(byteArray, 0, byteArray.Length);
    dataStream.Close();
    //  SEND MESSAGE
    string error;
    try
    {
WebResponse Response = Request.GetResponse();
HttpStatusCode ResponseCode = ((HttpWebResponse)Response).StatusCode;
if (ResponseCode.Equals(HttpStatusCode.Unauthorized) || ResponseCode.Equals(HttpStatusCode.Forbidden))
{
    error = ¡§Unauthorized ¡V need new token¡¨;
}
else if (!ResponseCode.Equals(HttpStatusCode.OK))
{
    error = ¡§Response from web service isn¡¦t OK¡¨;
}
StreamReader Reader = new StreamReader(Response.GetResponseStream());
string responseLine = Reader.ReadToEnd();
Reader.Close();
return responseLine;
    }
    catch (Exception e)
    {
error = e.ToString();
    }
    return error;
}
public static bool ValidateServerCertificate(object sender, X509Certificate certificate,X509Chain chain, SslPolicyErrors sslPolicyErrors)
{
    return true;
}